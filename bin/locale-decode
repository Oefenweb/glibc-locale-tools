#!/usr/bin/env python

# -*- coding: utf-8 -*-

import sys
import re

# LC_IDENTIFICATION section
lc_identification = re.compile(r'^LC_IDENTIFICATION')
lc_end_identification = re.compile(r'^END\s+?LC_IDENTIFICATION')
in_lc_identification = False

# Rest of the LC sections
lc_all = re.compile(r'^LC_')
lc_end_all = re.compile(r'^END\s+?LC_')
in_lc_all = False

# translit sections
translit_start = re.compile(r'^translit_start')
translit_end = re.compile(r'^translit_end')
in_translit = False

# Match comment (but only if comment char is %) (e.g. % Dutch Language Locale for the Netherlands)
comment = re.compile(r'^(%|#)')
# Match copy (e.g. copy "i18n")
copy = re.compile(r'^copy')
# Match include (e.g. include  "translit_combining";"")
include = re.compile(r'^include')
# Match unicode characters
unicode_characters = re.compile(r'<U[\dA-F]{4}>')


def print_touched_line(line):
  # return
  print line,


def print_untouched_line(line):
  # return
  print line,


def unicode_decode(string):
  return unichr(int(string, 16))


for line in sys.stdin:
  # LC_IDENTIFICATION start line
  if lc_identification.search(line):
    in_lc_identification = True
    print_untouched_line(line)
    continue

  # LC_IDENTIFICATION end line
  if lc_end_identification.search(line):
    in_lc_identification = False
    print_untouched_line(line)
    continue

  # Are we in the LC_IDENTIFICATION section
  if in_lc_identification:
    print_untouched_line(line)
    continue

  # LC_* start line
  if lc_all.search(line):
    in_lc_all = True
    print_untouched_line(line)
    continue

  # LC_* end line
  if lc_end_all.search(line):
    in_lc_all = False
    print_untouched_line(line)
    continue

  # translit start line
  if translit_start.search(line):
    in_translit = True
    print_untouched_line(line)
    continue

  # translit end line
  if translit_end.search(line):
    in_translit = False
    print_untouched_line(line)
    continue

  # Are we in the translit section
  if in_translit:
    print_untouched_line(line)
    continue

  # Comment line
  if comment.search(line):
    print_untouched_line(line)
    continue

  # Copy line
  if copy.search(line):
    print_untouched_line(line)
    continue

  # Include line
  if include.search(line):
    print_untouched_line(line)
    continue

  # Include line
  if include.search(line):
    print_untouched_line(line)
    continue

  # Not in a section
  if not in_lc_all:
    print_untouched_line(line)
    continue

  # Not an unicode character
  if not unicode_characters.search(line):
    print_untouched_line(line)
    continue

  modified_line = line
  modified_line = modified_line.decode('utf-8')
  modified_line = re.sub(r'<U([0-9A-F]{4})>', lambda match: unicode_decode(match.group(1)), modified_line)
  modified_line = modified_line.encode('utf-8')

  print_touched_line(modified_line)
